package FrontEnd.ServerObjectInterfaceApp;


/**
 * ServerObjectInterfaceApp/ServerObjectInterfacePOA.java .
 * Generated by the IDL-to-Java compiler (portable), version "3.2"
 * from C:/Users/SepJaProROG/StudioProjects/DEMS_Project/src/FrontEnd/ServerObjectInterface.idl
 * Wednesday, April 8, 2020 7:11:05 PM EDT
 */

public abstract class ServerObjectInterfacePOA extends org.omg.PortableServer.Servant
        implements FrontEnd.ServerObjectInterfaceApp.ServerObjectInterfaceOperations, org.omg.CORBA.portable.InvokeHandler {

    // Constructors

    private static java.util.Hashtable _methods = new java.util.Hashtable();
    // Type-specific CORBA::Object operations
    private static String[] __ids = {
            "IDL:ServerObjectInterfaceApp/ServerObjectInterface:1.0"};

    static {
        _methods.put("addEvent", new java.lang.Integer(0));
        _methods.put("removeEvent", new java.lang.Integer(1));
        _methods.put("listEventAvailability", new java.lang.Integer(2));
        _methods.put("bookEvent", new java.lang.Integer(3));
        _methods.put("getBookingSchedule", new java.lang.Integer(4));
        _methods.put("cancelEvent", new java.lang.Integer(5));
        _methods.put("swapEvent", new java.lang.Integer(6));
        _methods.put("shutdown", new java.lang.Integer(7));
    }

    public org.omg.CORBA.portable.OutputStream _invoke(String $method,
                                                       org.omg.CORBA.portable.InputStream in,
                                                       org.omg.CORBA.portable.ResponseHandler $rh) {
        org.omg.CORBA.portable.OutputStream out = null;
        java.lang.Integer __method = (java.lang.Integer) _methods.get($method);
        if (__method == null)
            throw new org.omg.CORBA.BAD_OPERATION(0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

        switch (__method.intValue()) {

            /**
             * Only manager
             */
            case 0:  // ServerObjectInterfaceApp/ServerObjectInterface/addEvent
            {
                String managerID = in.read_string();
                String eventID = in.read_string();
                String eventType = in.read_string();
                int bookingCapacity = in.read_long();
                String $result = null;
                $result = this.addEvent(managerID, eventID, eventType, bookingCapacity);
                out = $rh.createReply();
                out.write_string($result);
                break;
            }

            case 1:  // ServerObjectInterfaceApp/ServerObjectInterface/removeEvent
            {
                String managerID = in.read_string();
                String eventID = in.read_string();
                String eventType = in.read_string();
                String $result = null;
                $result = this.removeEvent(managerID, eventID, eventType);
                out = $rh.createReply();
                out.write_string($result);
                break;
            }

            case 2:  // ServerObjectInterfaceApp/ServerObjectInterface/listEventAvailability
            {
                String managerID = in.read_string();
                String eventType = in.read_string();
                String $result = null;
                $result = this.listEventAvailability(managerID, eventType);
                out = $rh.createReply();
                out.write_string($result);
                break;
            }


            /**
             * Both manager and Customer
             */
            case 3:  // ServerObjectInterfaceApp/ServerObjectInterface/bookEvent
            {
                String customerID = in.read_string();
                String eventID = in.read_string();
                String eventType = in.read_string();
                String $result = null;
                $result = this.bookEvent(customerID, eventID, eventType);
                out = $rh.createReply();
                out.write_string($result);
                break;
            }

            case 4:  // ServerObjectInterfaceApp/ServerObjectInterface/getBookingSchedule
            {
                String customerID = in.read_string();
                String $result = null;
                $result = this.getBookingSchedule(customerID);
                out = $rh.createReply();
                out.write_string($result);
                break;
            }

            case 5:  // ServerObjectInterfaceApp/ServerObjectInterface/cancelEvent
            {
                String customerID = in.read_string();
                String eventID = in.read_string();
                String eventType = in.read_string();
                String $result = null;
                $result = this.cancelEvent(customerID, eventID, eventType);
                out = $rh.createReply();
                out.write_string($result);
                break;
            }

            case 6:  // ServerObjectInterfaceApp/ServerObjectInterface/swapEvent
            {
                String customerID = in.read_string();
                String newEventID = in.read_string();
                String newEventType = in.read_string();
                String oldEventID = in.read_string();
                String oldEventType = in.read_string();
                String $result = null;
                $result = this.swapEvent(customerID, newEventID, newEventType, oldEventID, oldEventType);
                out = $rh.createReply();
                out.write_string($result);
                break;
            }

            case 7:  // ServerObjectInterfaceApp/ServerObjectInterface/shutdown
            {
                this.shutdown();
                out = $rh.createReply();
                break;
            }

            default:
                throw new org.omg.CORBA.BAD_OPERATION(0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
        }

        return out;
    } // _invoke

    public String[] _all_interfaces(org.omg.PortableServer.POA poa, byte[] objectId) {
        return __ids.clone();
    }

    public ServerObjectInterface _this() {
        return ServerObjectInterfaceHelper.narrow(
                super._this_object());
    }

    public ServerObjectInterface _this(org.omg.CORBA.ORB orb) {
        return ServerObjectInterfaceHelper.narrow(
                super._this_object(orb));
    }


} // class ServerObjectInterfacePOA
